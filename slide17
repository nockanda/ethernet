//이더넷 쉴드를 사용하기 위해서 필요한 라이브러리
#include <SPI.h>
#include <Ethernet.h>
#include "DHT.h"
#define DHTPIN 3  
#define DHTTYPE DHT11 
DHT dht(DHTPIN, DHTTYPE);

#define myled 4

byte mac[] = {0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};

IPAddress ip(192,168,0,123);
EthernetServer server(80);
void setup() {
  dht.begin();
  pinMode(myled,OUTPUT);
  Serial.begin(9600); //결과를 PC에 보내서 시리얼모니터에 출력하겠다!
  Ethernet.begin(mac); //동적IP주소 할당
  //Ethernet.begin(mac, ip); //수동IP주소 할당

  server.begin(); //웹서버 작동!

  Serial.print("인터넷 공유기로 부터 받은 IP주소=");
  Serial.println(Ethernet.localIP());
}

void loop() {
  //서버가 클라이언트가 올때까지 기다린다!
  EthernetClient client = server.available();
  if (!client) {
    return;
  }
  Serial.println("새로운 클라이언트 등장");
  
  //클라이언트가 보내는 내용을 서버가 수신해야함
  String mydata = client.readStringUntil('\n');
  if(mydata.indexOf("/led=0") != -1){
    digitalWrite(myled,LOW);
  }else if(mydata.indexOf("/led=1") != -1){
    digitalWrite(myled,HIGH);
  }
  
  while(client.available()){
    //클라이언트가 보낸 request를 전부 시리얼 모니터에 출력한다!
    client.read();   
  }
    
  //서버가 클라이언트가 부탁한 내용을 처리하는 부분
  float h = dht.readHumidity(); //습도 
  float t = dht.readTemperature(); //온도
  bool led_state = digitalRead(myled); //LED상태
    
  //서버가 클라이언트에게 응답을 전송함
  String response = String(t) + "," + String(h) + "," + String(led_state);
  client.print(F("HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n"));
  client.print(response);

  //접속해제
  client.stop();
}


